# REFS:
# https://github.com/ProcursusTeam/Procursus/tree/main/makefiles
# https://github.com/kabiroberai/darwin-tools-linux/blob/master/prepare-toolchain
name: Build

on:
  push:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
    - name: Create release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Draft Release
        body: ''
        draft: true

  build:
    needs: create_release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@main
      - name: LLVM/Clang prep
        run: |
          sudo apt install build-essential \
            cmake \
            coreutils \
            git \
            libplist-dev \
            libssl-dev \
            make \
            pkg-config \
            python3 \
            zlib1g-dev
          mkdir -p $HOME/linux/iphone/

      - name: Build LLVM/Clang
        run: |
          mkdir build && cd build
          cmake -G "Unix Makefiles" -DLLVM_ENABLE_PROJECTS=clang \
            -DLLVM_LINK_LLVM_DYLIB=ON \
            -DLLVM_ENABLE_Z3_SOLVER=OFF \
            -DLLVM_ENABLE_BINDINGS=OFF \
            -DLLVM_ENABLE_WARNINGS=OFF \
            -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
            -DLLVM_INCLUDE_TESTS=OFF \
            -DCLANG_INCLUDE_TESTS=OFF \
            -DCMAKE_BUILD_TYPE=MinSizeRel \
            -DCMAKE_INSTALL_PREFIX="$HOME/linux/iphone/" \
            ../llvm
          make -j$(nproc --all) install

      # - name: Build compiler-rt
      #   run: |
      #     mkdir build-compiler-rt && cd build-compiler-rt
      #     cmake -G "Unix Makefiles" -DLLVM_ENABLE_PROJECTS="clang" \
      #       -DLLVM_ENABLE_RUNTIMES="compiler-rt" \
      #       -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
      #       -DLLVM_INCLUDE_TESTS=OFF \
      #       -DCLANG_INCLUDE_TESTS=OFF \
      #       -DCOMPILER_RT_INCLUDE_TESTS=OFF \
      #       -DCOMPILER_RT_BUILD_CRT=OFF \
      #       -DCOMPILER_RT_BUILD_LIBFUZZER=OFF \
      #       -DCOMPILER_RT_BUILD_PROFILE=OFF \
      #       -DCOMPILER_RT_BUILD_SANITIZERS=OFF \
      #       -DCOMPILER_RT_BUILD_XRAY=OFF \
      #       -DCOMPILER_RT_BUILD_BUILTINS=ON \
      #       -DBUILTINS_CMAKE_ARGS="-DCOMPILER_RT_ENABLE_IOS=ON -DCOMPILER_RT_ENABLE_WATCHOS=ON -DCOMPILER_RT_ENABLE_TVOS=ON" \
      #       -DCMAKE_BUILD_TYPE=MinSizeRel \
      #       -DCMAKE_INSTALL_PREFIX="$HOME/linux/iphone/" \
      #       ../llvm
      #     make -j$(nproc --all) install-compiler-rt

      - name: Build ldid
        run: |
          git clone https://github.com/ProcursusTeam/ldid
          cd ldid
          make -j$(nproc --all) DESTDIR="$HOME/linux/iphone/" \
            PREFIX="" \
            LIBCRYPTO_LIBS="-lcrypto" \
            LIBPLIST_LIBS="-lplist-2.0" \
            install

      - name: Build tapi
        run: |
          git clone https://github.com/tpoechtrager/apple-libtapi
          mkdir -p $HOME/cctools && cd apple-libtapi
          mkdir build-tblgens && cd build-tblgens
          cmake -G "Unix Makefiles" -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
            -DLLVM_INCLUDE_TESTS=OFF \
            -DLLVM_ENABLE_WARNINGS=OFF \
            -DCLANG_INCLUDE_TESTS=OFF \
            -DCMAKE_BUILD_TYPE=Release \
            ../src/llvm
          make -j$(nproc --all) llvm-tblgen clang-tblgen
          cd ../

          mkdir build-tapi && cd build-tapi
          cmake -G "Unix Makefiles" -DLLVM_ENABLE_PROJECTS="libtapi" \
            -DLLVM_INCLUDE_TESTS=OFF \
            -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
            -DLLVM_ENABLE_WARNINGS=OFF \
            -DTAPI_FULL_VERSION="$(cat $PWD/../VERSION.txt | grep "tapi" | grep -o '[[:digit:]].*')" \
            -DLLVM_TABLEGEN="$PWD/../build-tblgens/bin/llvm-tblgen" \
            -DCLANG_TABLEGEN="$PWD/../build-tblgens/bin/clang-tblgen" \
            -DCLANG_TABLEGEN_EXE="$PWD/../build-tblgens/bin/clang-tblgen" \
            -DCMAKE_BUILD_TYPE=MinSizeRel \
            -DCMAKE_CXX_FLAGS="-I$PWD/../src/llvm/projects/clang/include/ -I$PWD/projects/clang/include/" \
            -DCMAKE_INSTALL_PREFIX="$HOME/cctools/" \
            ../src/llvm
          make -j$(nproc --all) install-libtapi install-tapi-headers install-tapi

      - name: Build cctools
        run: |
          git clone https://github.com/tpoechtrager/cctools-port
          cd cctools-port/cctools
          ./configure --prefix="$HOME/cctools/" \
            --target=aarch64-apple-darwin14 \
            --enable-tapi-support \
            --with-libtapi="$HOME/cctools/" \
            --program-prefix="" \
            CC="$HOME/linux/iphone/bin/clang" \
            CXX="$HOME/linux/iphone/bin/clang++" \
            CXXABI_LIB="-l:libc++abi.a" \
            LDFLAGS="-Wl,-rpath,'\$\$ORIGIN/../lib' -Wl,-z,origin"
          make -j$(nproc --all) install
          cp -a $HOME/cctools/* $HOME/linux/iphone/

      - name: Prep build for release
        run: |
          cd $HOME
          tar -cJvf iOSToolchain.tar.xz linux/iphone/

      - name: Attach build to release
        run: |
          set -x
          gh release upload ${GITHUB_REF##*/} ~/iOSToolchain.tar.xz
